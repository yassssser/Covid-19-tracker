{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","Api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","images/loading.gif","components/Chart/Chart.module.css","images/merci.jpeg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","src","Loading","alt","height","url","fetchData","country","a","newUrl","axios","get","fetchDailyData","modifedData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","CountryPicker","handleCountryChange","setCountries","fetchApi","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","image","merci","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4OCmEpJC,EA5DD,SAAC,GAA4D,IAAD,IAAzDC,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WACrD,OAAKH,EAKH,yBAAKI,UAAWC,IAAOC,WACrB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WAC3E,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKT,UAAU,MACjC,kBAAC,IAAD,CAASU,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,KAAMC,UAAU,OAErE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIQ,KAAKzB,GAAY0B,gBAExB,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAQT,UAAU,KAAtC,yCAKJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YAC3E,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKT,UAAU,MACjC,kBAAC,IAAD,CAASU,MAAO,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,KAAMC,UAAU,OAErE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIQ,KAAKzB,GAAY0B,gBAExB,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAQT,UAAU,KAAtC,yCAKJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SAC3E,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKT,UAAU,MACjC,kBAAC,IAAD,CAASU,MAAO,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,KAAMC,UAAU,OAElE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIQ,KAAKzB,GAAY0B,gBAExB,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAQT,UAAU,KAAtC,4CAjDD,yBAAKiB,IAAKC,IAASC,IAAI,GAAGC,OAAO,S,iCCRtCC,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACjBC,EAASJ,EAETE,IACFE,EAAM,UAAMJ,EAAN,sBAAuBE,IAJV,kBAQkDG,IAAMC,IAAIF,GAR5D,2BAQXvC,KAAQC,EARG,EAQHA,UAAWC,EARR,EAQQA,UAAWC,EARnB,EAQmBA,OAAQC,EAR3B,EAQ2BA,WAR3B,kBAUZ,CAAEH,YAAWC,YAAWC,SAAQC,eAVpB,2HAAH,sDAgBTsC,EAAc,uCAAG,gCAAAJ,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEdnC,EAFc,EAEdA,KAEF2C,EAAc3C,EAAK4C,KAAI,SAACC,GAAD,MAAgB,CACzC5C,UAAW4C,EAAU5C,UAAU6C,MAC/B3C,OAAQ0C,EAAU1C,OAAO2C,MACzBC,KAAMF,EAAUG,eAPE,kBAUfL,GAVe,gCAYtBM,QAAQC,IAAR,MAZsB,yDAAH,qDAgBdC,EAAc,uCAAG,8BAAAb,EAAA,+EAEeE,IAAMC,IAAN,UAAaN,EAAb,eAFf,uBAENiB,EAFM,EAEdpD,KAAQoD,UAFM,kBAIfA,EAAUR,KAAI,SAACP,GAAD,OAAaA,EAAQgB,SAJpB,gCAMtBJ,QAAQC,IAAR,MANsB,yDAAH,qD,iBCmCZI,EAhED,SAAC,GAAyD,IAAD,IAAtDtD,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAUkC,EAAc,EAAdA,QAAc,EACnCkB,mBAAS,IAD0B,mBAC9DV,EAD8D,KACnDW,EADmD,KAGrEC,qBAAU,YACQ,uCAAG,4BAAAnB,EAAA,sEACcI,IADd,OACXgB,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAMhBC,KACC,IAEH,IAAMC,EACJ3D,EACE,kBAAC,IAAD,CACED,KAAM,CACJ6D,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClEhE,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAItDuC,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsBhC,OAGpD,KAGAiC,EACJzB,EAAU,GACR,kBAAC,IAAD,CACE7C,KAAM,CACJ6D,OAAQhB,EAAUD,KAAI,qBAAGG,QACzBe,SAAU,CAAC,CACT9D,KAAM6C,EAAUD,KAAI,SAAC5C,GAAD,OAAUA,EAAKC,aACnC8D,MAAO,WACPQ,YAAa,UACbC,MAAM,GACL,CACDxE,KAAM6C,EAAUD,KAAI,SAAC5C,GAAD,OAAUA,EAAKG,UACnC4D,MAAO,SACPQ,YAAa,MACbP,gBAAiB,uBACjBQ,MAAM,OAKV,KAGN,OACE,yBAAKnE,UAAWC,IAAOC,WACpB8B,EAAUuB,EAAWU,I,mCCpCbG,EAvBO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACbnB,mBAAS,IADI,mBACxCH,EADwC,KAC7BuB,EAD6B,KAW/C,OARAlB,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbqC,EADa,SACMxB,IADN,6EAAH,qDAIdyB,KACD,CAACD,IAGA,kBAACE,EAAA,EAAD,CAAaxE,UAAWC,IAAOwE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOzD,SACxE,4BAAQA,MAAM,IAAd,UAEI0B,EAAUR,KAAI,SAACP,EAAS+C,GAAV,OAAgB,4BAAQC,IAAKD,EAAG1D,MAAOW,GAAUA,S,kCCoBpEiD,E,4MAlCbC,MAAQ,CACNvF,KAAM,GACNqC,QAAS,I,EASXqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEACDF,EAAUC,GADT,OACdrC,EADc,OAGpB,EAAKwF,SAAS,CAAExF,OAAMqC,QAASA,IAHX,2C,wPALDD,I,OAAbpC,E,OAENyF,KAAKD,SAAS,CAAExF,S,qIASR,IAAD,EACmByF,KAAKF,MAAvBvF,EADD,EACCA,KAAMqC,EADP,EACOA,QAEd,OACE,yBAAKhC,UAAWC,IAAOC,WACrB,oNACA,qFACA,6FACA,yBAAKF,UAAWC,IAAOoF,MAAO3D,IAAK4D,IAAO1D,IAAI,aAC9C,kBAAC,EAAD,CAAOjC,KAAMA,IACb,kBAAC,EAAD,CAAe0E,oBAAqBe,KAAKf,sBACzC,kBAAC,EAAD,CAAO1E,KAAMA,EAAMqC,QAASA,S,GA7BlBuD,IAAMC,WCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjDpG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCD7DD,EAAOC,QAAU,IAA0B,qC,mBCC3CD,EAAOC,QAAU,CAAC,UAAY,2B,wCCD9BD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.cfc1e315.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__29swn\",\"card\":\"Cards_card__ObK1F\",\"infected\":\"Cards_infected__RBMBU\",\"recovered\":\"Cards_recovered__3fsEW\",\"deaths\":\"Cards_deaths__2CuZH\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport Loading from '../../images/loading.gif'\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return <img src={Loading} alt=\"\" height=\"20%\"/>\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of active cases of COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of recoveries from COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of deaths caused by COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import axios from 'axios'\r\n\r\nconst url = \"https://covid19.mathdro.id/api\"\r\n\r\nexport const fetchData = async (country) => {\r\n    let newUrl = url;\r\n  \r\n    if (country) {\r\n      newUrl = `${url}/countries/${country}`;\r\n    }\r\n  \r\n    try {\r\n      const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(newUrl);\r\n  \r\n      return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\nexport const fetchDailyData = async() => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        \r\n        const modifedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n\r\n        return modifedData\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`)\r\n\r\n        return countries.map((country) => country.name)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../Api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { NativeSelect, FormControl } from'@material-ui/core'\r\n\r\nimport { fetchCountries } from '../../Api'\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setCountries(await fetchCountries())\r\n        }\r\n\r\n        fetchApi()\r\n    }, [setCountries])\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {\r\n                    countries.map((country, i) => <option key={i} value={country}>{country}</option>)\r\n                }\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './Api';\r\nimport styles from './App.module.css';\r\n\r\nimport merci from './images/merci.jpeg';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <h3>شكرا لكل من يساعد في محاربة الفيروس</h3>\r\n        <h3>thank you to everyone who helps fight the coronavirus</h3>\r\n        <h3>merci à tous ceux qui aident à combattre le coronavirus</h3>\r\n        <img className={styles.image} src={merci} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__hoKyV\",\"image\":\"App_image__1AWIK\"};","module.exports = __webpack_public_path__ + \"static/media/loading.b71b7d60.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__18645\"};","module.exports = __webpack_public_path__ + \"static/media/merci.30b22443.jpeg\";"],"sourceRoot":""}